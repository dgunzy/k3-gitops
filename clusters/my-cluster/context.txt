-e 
=== ./flux-system/kustomization.yaml ===
apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
resources:
  - gotk-components.yaml
  - gotk-sync.yaml
  - ../ingress-nginx/flux-kustomization.yaml
  - ../apps/cabot-cup/flux-kustomization.yaml
  - ../cert-manager/flux-kustomization.yaml
  - ../apps/cabot-book/flux-kustomization.yaml
  - ../kube-system/metrics-server/flux-kustomization.yaml
-e 
=== ./flux-system/gotk-sync.yaml ===
# gotk-sync.yaml
---
apiVersion: source.toolkit.fluxcd.io/v1
kind: GitRepository
metadata:
  name: flux-system
  namespace: flux-system
spec:
  interval: 1m0s
  ref:
    branch: main
  secretRef:
    name: flux-system
  url: ssh://git@github.com/dgunzy/k3-gitops
---
apiVersion: kustomize.toolkit.fluxcd.io/v1
kind: Kustomization
metadata:
  name: flux-system
  namespace: flux-system
spec:
  interval: 10m0s
  path: ./clusters/my-cluster/flux-system
  prune: true
  sourceRef:
    kind: GitRepository
    name: flux-system-e 
=== ./cert-manager/flux-kustomization.yaml ===
apiVersion: kustomize.toolkit.fluxcd.io/v1
kind: Kustomization
metadata:
  name: metrics-server
  namespace: kube-system
spec:
  interval: 1h
  path: ./clusters/my-cluster/kube-system/metrics-server
  prune: true
  sourceRef:
    kind: GitRepository
    name: flux-system-e 
=== ./cert-manager/source.yaml ===
apiVersion: source.toolkit.fluxcd.io/v1beta2
kind: HelmRepository
metadata:
  name: jetstack
  namespace: flux-system
spec:
  interval: 1h
  url: https://charts.jetstack.io-e 
=== ./cert-manager/config/cluster-issuer.yaml ===
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-prod
spec:
  acme:
    server: https://acme-v02.api.letsencrypt.org/directory
    email: danbguns@gmail.com 
    privateKeySecretRef:
      name: letsencrypt-prod
    solvers:
    - http01:
        ingress:
          class: nginx-e 
=== ./cert-manager/config/kustomization.yaml ===
apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
resources:
  - cluster-issuer.yaml-e 
=== ./cert-manager/config/cluster-issuer-kustomization.yaml ===
apiVersion: kustomize.toolkit.fluxcd.io/v1
kind: Kustomization
metadata:
  name: cert-manager-config
  namespace: flux-system
spec:
  interval: 1h
  path: ./clusters/my-cluster/cert-manager/config
  prune: true
  sourceRef:
    kind: GitRepository
    name: flux-system
  dependsOn:
    - name: cert-manager-e 
=== ./cert-manager/kustomization.yaml ===
apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
resources:
  - namespace.yaml
  - source.yaml
  - release.yaml
  - config/cluster-issuer-kustomization.yaml-e 
=== ./cert-manager/namespace.yaml ===
apiVersion: v1
kind: Namespace
metadata:
  name: cert-manager -e 
=== ./cert-manager/release.yaml ===
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: cert-manager
  namespace: cert-manager
spec:
  interval: 5m
  chart:
    spec:
      chart: cert-manager
      version: "v1.13.x"
      sourceRef:
        kind: HelmRepository
        name: jetstack
        namespace: flux-system
  install:
    createNamespace: true
    remediation:
      retries: 3
  values:
    installCRDs: true-e 
=== ./kube-system/metrics-server/flux-kustomization.yaml ===
apiVersion: kustomize.toolkit.fluxcd.io/v1
kind: Kustomization
metadata:
  name: metrics-server 
  namespace: flux-system
spec:
  interval: 1h
  path: ./clusters/my-cluster/kube-system/metrics-server
  prune: true
  sourceRef:
    kind: GitRepository
    name: flux-system-e 
=== ./kube-system/metrics-server/kustomization.yaml ===
apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
resources:
  - patch.yaml-e 
=== ./kube-system/metrics-server/patch.yaml ===
apiVersion: apps/v1
kind: Deployment
metadata:
  name: metrics-server
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: metrics-server
  template:
    spec:
      containers:
      - name: metrics-server
        args:
        - --cert-dir=/tmp
        - --secure-port=10250
        - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
        - --kubelet-use-node-status-port
        - --kubelet-insecure-tls
        - --metric-resolution=15s
        - --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305-e 
=== ./apps/cabot-book/flux-kustomization.yaml ===
apiVersion: kustomize.toolkit.fluxcd.io/v1
kind: Kustomization
metadata:
  name: cabot-book 
  namespace: flux-system
spec:
  interval: 1m
  path: ./clusters/my-cluster/apps/cabot-book
  prune: true
  sourceRef:
    kind: GitRepository
    name: flux-system
  decryption:
    provider: sops
    secretRef:
      name: sops-age-e 
=== ./apps/cabot-book/deployment.yaml ===
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cabot-book
  namespace: my-cluster
spec: 
  strategy:
    type: Recreate
  replicas: 1
  selector:
    matchLabels:
      app: cabot-book
  template:
    metadata:
      labels:
        app: cabot-book
    spec:
      containers:
      - name: cabot-book
        image: ghcr.io/dgunzy/cabot-book:latest
        ports:
          - name: web
            containerPort: 8080 
       
        envFrom:
        - secretRef:
            name: cabot-book-env-e 
=== ./apps/cabot-book/ingress.yaml ===
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: cabot-book 
  namespace: my-cluster
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - cabotcupbook.com
    - www.cabotcupbook.com
    secretName: cabotcupbook-tls
  rules:
    - host: cabotcupbook.com
      http:
        paths:
          - pathType: Prefix
            path: / 
            backend:
              service:
                name: cabot-book-service
                port:
                  number: 7070
    - host: www.cabotcupbook.com
      http:
        paths:
          - pathType: Prefix
            path: / 
            backend:
              service:
                name: cabot-book-service
                port:
                  number: 7070-e 
=== ./apps/cabot-book/kustomization.yaml ===
apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
namespace: my-cluster
resources:
  - namespace.yaml
  - deployment.yaml
  - service.yaml
  - ingress.yaml
  - secret.yaml-e 
=== ./apps/cabot-book/service.yaml ===
apiVersion: v1
kind: Service
metadata:
  name: cabot-book-service 
  namespace: my-cluster
spec: 
  type: ClusterIP
  ports:
    - port: 7070
      targetPort: web 
  selector:
    app: cabot-book   -e 
=== ./apps/cabot-book/namespace.yaml ===
apiVersion: v1
kind: Namespace
metadata:
  name: my-cluster-e 
=== ./apps/cabot-book/secret.yaml ===
apiVersion: v1
kind: Secret
metadata:
    name: cabot-book-env
    namespace: my-cluster
type: Opaque
stringData:
    APP_ENV: ENC[AES256_GCM,data:/a1rcXY=,iv:cRHkwLoHvU15wHtHQtBXPYt1qMLO8pQluNjqH4Qv98g=,tag:1SWV3GX+BvJfL1bHOeUd0w==,type:str]
    CALLBACK_URL: ENC[AES256_GCM,data:PFu6HJMl7yyjxZZo8XfXap2/qQ3QchNGqwjLrwY1XeAQuTGWgaliZzVctUH3cCpL1w==,iv:Mmr/jaYYb5SJJdxYBo6UyuAH1H48MjErUJyB1JHQtgo=,tag:Bb/LIvqmjw9VIwmqO86G8g==,type:str]
    DBAUTH: ENC[AES256_GCM,data:pY8I5mQ00W0F4yt9DoMzwAJKvAK6M2inD3xQvMPKVo6KzSllRkTPpxv7MrUHNOajz7iDYICX5elvt8Not4WKtaWYE+bgCknGfEk2sWvP+tgT/tS6EsfRDO5Ynz6ag7jt2ces9cGdBg4dqbFGBfMTmX7wfcl8ddf/hDK/3QwdmDVFYdqRRXqjWl6GHsBJqu3xVeayN4buiA80LFWUX5hBB6QP8Zd/B7V7YXsSADR7h5KGbyoVPK/5v/WdX2A9EodKbNHOVhX+eTy86p7HxQ5s,iv:tNBO6UD13rArDvpmr1lqNSkEq+DRyk5LRNI563k8Sis=,tag:u8P07AJNX1nVPH9IH3830A==,type:str]
    DBURI: ENC[AES256_GCM,data:nPo+jIWvPHhZiSG8eWu86Udv8jgpvDQ4jYLs2FdUpoD2yj4=,iv:FhQvjHPLBGqHxbiK+bh0RPPJmQSSUX3Sul/JQP3OrvA=,tag:0J854+Y151/cSrF5R8t7Tg==,type:str]
    GOOGLE_CLIENT_ID: ENC[AES256_GCM,data:xnKL2PIPMlcoed+GlRaBeiNcF9zPrhQVgh3nXOlrV7I253SEuplyXTQEqqYec3I+EndwRgsxF/eGSlt7f0TnzuChDTq4B2Zu,iv:+GPk8ItDzWnZyJFNEn4XYuhf/XC4lmf8Iyq8THX6GPE=,tag:yd/z6f7FM1uPSzNGf4Xm/Q==,type:str]
    GOOGLE_CLIENT_SECRET: ENC[AES256_GCM,data:2GvVLmg0G/68k7pPTqZQxEvRVdtN46FLTrsqEVEXb46FpVM=,iv:tqI8kxUKsFzsHARUt7VwomHBiHughE8FdlhBL/imlVE=,tag:erddo65Hn0XX53vY7W9uvw==,type:str]
    SECRET_KEY: ENC[AES256_GCM,data:SApF3Pu3pmpxYg4lXS88325Xyf3KIbZzTi1ND6oxPLI=,iv:xgGTiXwb8CYAzZg10RzQrUQoIDLYHn5OpZJOA4oBqsc=,tag:S1hyUYoS3KGmNkvT0vc1yg==,type:str]
    SESSION: ENC[AES256_GCM,data:ZizgCB4eugFZToqhhkBYxV7Zrw==,iv:9LawltF0UkS8FGyuKc9qbEAG7p3RTw1oJS46FWdR1/A=,tag:6E660shZY/q6rbn2ec/yig==,type:str]
    SESSION_KEY: ENC[AES256_GCM,data:6veDU7emNSd5Xx8ObQAX4cNAGQ==,iv:eBBAOWteKxosuxrz2VMV2YOMkIBybr5LTTglMTRJ2kQ=,tag:dZvc2e+wVFMxNEfQCfO8tQ==,type:str]
sops:
    kms: []
    gcp_kms: []
    azure_kv: []
    hc_vault: []
    age:
        - recipient: age1kk3kuv24cpkd00cmdvgmzuzppnpt3svtgdguejulzm2nktg3gdfq0ywdgm
          enc: |
            -----BEGIN AGE ENCRYPTED FILE-----
            YWdlLWVuY3J5cHRpb24ub3JnL3YxCi0+IFgyNTUxOSBucjQ0L3g2QWR3R0RKdnhW
            K1V6eEo4aTVZc1pIeFl1ZWNBclJGdzlQQ0FJCmhscEkwUjhWMFNDbEV5KzhEMlYr
            MWVmME5SODd0dmFIeUtheHB3ak1VaTQKLS0tIHIrNjJoY1J2Rm5DMnNWOGtDQ1lt
            OEh2MWZReTJtMW9KSml1bkpIWks5cjQKwdN3QcTJV32PEb5gcG4XkhIEr84lLtbk
            pQ8QhMagCiMbna1i7wHJhWzzOyovUF9ZKGSCSg0ZGjJVn1DtsjaaeA==
            -----END AGE ENCRYPTED FILE-----
    lastmodified: "2024-11-08T20:51:54Z"
    mac: ENC[AES256_GCM,data:cIzNTC8qC0kd9jv85BofrGUEzE6lZultf25BloMGAb+oL8stCiOLuqMKhmudqgDSA1SfcyYhcTwO9xkf7lNmNvGYg7nBL6SXeZqSQMeQTV9s2ShsTB8p/rHEoC/X8JHQPgikw29QGFiuYrET/4E6LDY7lKhiqG8YHGcR8Pl2Q/Q=,iv:4kD8njc9zmGK0xg/O5IAw14nmxL8ct8JizsRwdtLwW0=,tag:Rx1ti2L4y5GzY59SZq0DeA==,type:str]
    pgp: []
    encrypted_regex: ^(data|stringData)$
    version: 3.9.1
-e 
=== ./apps/cabot-cup/flux-kustomization.yaml ===
apiVersion: kustomize.toolkit.fluxcd.io/v1
kind: Kustomization
metadata:
  name: cabot-cup 
  namespace: flux-system
spec:
  interval: 1m
  path: ./clusters/my-cluster/apps/cabot-cup
  prune: true
  sourceRef:
    kind: GitRepository
    name: flux-system-e 
=== ./apps/cabot-cup/deployment.yaml ===
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cabot-cup
  namespace: my-cluster
spec:
  strategy:
    type: Recreate
  replicas: 1
  selector:
    matchLabels:
      app: cabot-cup
  template:
    metadata:
      labels:
        app: cabot-cup
    spec:
      containers:
      - name: cabot-cup
        image: ghcr.io/dgunzy/ejs-cabot-app:latest
        ports:
          - name: web
            containerPort: 3000    
        
-e 
=== ./apps/cabot-cup/ingress.yaml ===
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: cabot-cup 
  namespace: my-cluster
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - cabotcup.ca
    secretName: cabotcup-tls
  rules:
    - host: cabotcup.ca
      http:
        paths:
          - pathType: Prefix
            path: / 
            backend:
              service:
                name: cabot-cup-service
                port:
                  number: 7070
 

-e 
=== ./apps/cabot-cup/kustomization.yaml ===
apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
resources:
  - namespace.yaml
  - deployment.yaml
  - service.yaml
  - ingress.yaml-e 
=== ./apps/cabot-cup/service.yaml ===
apiVersion: v1
kind: Service
metadata:
  name: cabot-cup-service 
  namespace: my-cluster
spec: 
  type: ClusterIP
  ports:
    - port: 7070
      targetPort: web 
  selector:
    app: cabot-cup   -e 
=== ./apps/cabot-cup/namespace.yaml ===
apiVersion: v1
kind: Namespace
metadata:
  name: my-cluster-e 
=== ./ingress-nginx/flux-kustomization.yaml ===
apiVersion: kustomize.toolkit.fluxcd.io/v1
kind: Kustomization
metadata:
  name: ingress-nginx
  namespace: flux-system
spec:
  interval: 1h
  path: ./clusters/my-cluster/ingress-nginx
  prune: true
  sourceRef:
    kind: GitRepository
    name: flux-system-e 
=== ./ingress-nginx/source.yaml ===
apiVersion: source.toolkit.fluxcd.io/v1beta2
kind: HelmRepository
metadata:
  name: ingress-nginx
  namespace: flux-system
spec:
  interval: 1h
  url: https://kubernetes.github.io/ingress-nginx-e 
=== ./ingress-nginx/kustomization.yaml ===
apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
resources:
  - namespace.yaml
  - source.yaml
  - release.yaml-e 
=== ./ingress-nginx/namespace.yaml ===
apiVersion: v1
kind: Namespace
metadata:
  name: ingress-nginx-e 
=== ./ingress-nginx/release.yaml ===
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: ingress-nginx
  namespace: ingress-nginx
spec:
  interval: 5m
  chart:
    spec:
      chart: ingress-nginx
      version: "4.x"  
      sourceRef:
        kind: HelmRepository
        name: ingress-nginx
        namespace: flux-system
  install:
    createNamespace: true
    remediation:
      retries: 3
  values:
    controller:
      service:
        externalIPs: 
          - "15.222.124.115"  